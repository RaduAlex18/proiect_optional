// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proiect_op_2_v3_final.Data;

#nullable disable

namespace proiect_op_2_v3_final.Migrations
{
    [DbContext(typeof(tableContext))]
    partial class tableContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("proiect_op_2_v3_final.Models.CargoTrailer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .IsUnique();

                    b.ToTable("CargoTrailers");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip_code")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CNP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Goods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Goodss");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.ModelsRelationTRCT", b =>
                {
                    b.Property<Guid>("CargoTrailerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TruckId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CargoTrailerId", "TruckId");

                    b.HasIndex("TruckId");

                    b.ToTable("ModelsRelationsTRCT");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.ModelsRelationTRRT", b =>
                {
                    b.Property<Guid>("RoutesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TruckId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoutesId", "TruckId");

                    b.HasIndex("TruckId");

                    b.ToTable("ModelsRelationsTRRT");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Routes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("city_end")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city_start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("km")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Routess");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand_T")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.CargoTrailer", b =>
                {
                    b.HasOne("proiect_op_2_v3_final.Models.Goods", "Goods")
                        .WithOne("CargoTrailer")
                        .HasForeignKey("proiect_op_2_v3_final.Models.CargoTrailer", "GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Driver", b =>
                {
                    b.HasOne("proiect_op_2_v3_final.Models.City", "City")
                        .WithMany("Drivers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.ModelsRelationTRCT", b =>
                {
                    b.HasOne("proiect_op_2_v3_final.Models.CargoTrailer", "CargoTrailer")
                        .WithMany("ModelsRelationsTRCT")
                        .HasForeignKey("CargoTrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proiect_op_2_v3_final.Models.Truck", "Truck")
                        .WithMany("ModelsRelationsTRCT")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoTrailer");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.ModelsRelationTRRT", b =>
                {
                    b.HasOne("proiect_op_2_v3_final.Models.Routes", "Routes")
                        .WithMany("ModelsRelationsTRRT")
                        .HasForeignKey("RoutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proiect_op_2_v3_final.Models.Truck", "Truck")
                        .WithMany("ModelsRelationsTRRT")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routes");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Truck", b =>
                {
                    b.HasOne("proiect_op_2_v3_final.Models.Driver", "Driver")
                        .WithOne("Truck")
                        .HasForeignKey("proiect_op_2_v3_final.Models.Truck", "DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.CargoTrailer", b =>
                {
                    b.Navigation("ModelsRelationsTRCT");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.City", b =>
                {
                    b.Navigation("Drivers");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Driver", b =>
                {
                    b.Navigation("Truck")
                        .IsRequired();
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Goods", b =>
                {
                    b.Navigation("CargoTrailer")
                        .IsRequired();
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Routes", b =>
                {
                    b.Navigation("ModelsRelationsTRRT");
                });

            modelBuilder.Entity("proiect_op_2_v3_final.Models.Truck", b =>
                {
                    b.Navigation("ModelsRelationsTRCT");

                    b.Navigation("ModelsRelationsTRRT");
                });
#pragma warning restore 612, 618
        }
    }
}
